name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    env:
      # Don't try to build for Python2 or PyPy.
      CIBW_SKIP: "cp27-* pp27-* pp36-* pp37-*"
      # Install the Rust toolchain into the cibuildwheel Docker container.
      CIBW_BEFORE_ALL_LINUX: "curl -sSf https://sh.rustup.rs | sh -s -- -y"
      CIBW_BEFORE_ALL_MACOS: "curl -sSf https://sh.rustup.rs | sh -s -- -y"
      CIBW_BEFORE_ALL_WINDOWS: "choco install rust -f -y"
      # Set the Rust toolchain on the path inside the Docker container.
      CIBW_ENVIRONMENT: 'PATH="$PATH:$HOME/.cargo/bin"'
      CIBW_BUILD_VERBOSITY: 1
      # Build all available 64-bit platforms.
      CIBW_ARCHS: auto64
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # With cibuildwheel only the OS needs specified, not Python version
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python on ${{ matrix.os }}
        uses: actions/setup-python@v2

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel

      - name: Build wheels
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
              CIBW_MANYLINUX_X86_64_IMAGE=quay.io/pypa/manylinux2014_x86_64:latest cibuildwheel --output-dir wheelhouse
          fi
          cibuildwheel --output-dir wheelhouse




      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
